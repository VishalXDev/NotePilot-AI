"use client";
import { useState } from "react";
import { FiEdit, FiTrash2, FiX } from "react-icons/fi";
import { HiSparkles } from "react-icons/hi2";
import Modal from "@/components/Modal";

export default function NoteCard({ note, onEdit, onDelete }) {
  const [summary, setSummary] = useState("");
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState("");
  const [showModal, setShowModal] = useState(false);

  const handleSummarize = async () => {
    if (!note.content.trim()) {
      setError("Note content is empty");
      return;
    }

    setLoading(true);
    setError("");

    try {
      const res = await fetch("/api/summarize", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ content: note.content }),
      });

      if (!res.ok) throw new Error("Summarization failed");

      const data = await res.json();
      setSummary(data.summary);
      setShowModal(true);
    } catch (err) {
      setError(err.message);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="bg-white shadow rounded-lg p-4 space-y-3 border border-gray-100">
      <h3 className="text-lg font-semibold text-gray-800">{note.title}</h3>
      <p className="text-gray-600 whitespace-pre-line">{note.content}</p>

      <div className="flex gap-3 pt-2">
        <button
          onClick={() => onEdit(note)}
          className="flex items-center gap-1 text-blue-600 hover:text-blue-800 text-sm"
          aria-label="Edit note"
        >
          <FiEdit className="w-4 h-4" />
          Edit
        </button>

        <button
          onClick={() => onDelete(note._id)}
          className="flex items-center gap-1 text-red-600 hover:text-red-800 text-sm"
          aria-label="Delete note"
        >
          <FiTrash2 className="w-4 h-4" />
          Delete
        </button>

        <button
          onClick={handleSummarize}
          disabled={loading || !note.content.trim()}
          className="flex items-center gap-1 text-green-600 hover:text-green-800 text-sm disabled:opacity-50"
          aria-label="Summarize note"
        >
          <HiSparkles className="w-4 h-4" />
          {loading ? "Processing..." : "AI Summary"}
        </button>
      </div>

      {error && <p className="text-red-500 text-xs mt-1">{error}</p>}

      {/* Modal for AI Summary */}
      <Modal isOpen={showModal} onClose={() => setShowModal(false)}>
        <div className="p-4">
          <div className="flex justify-between items-center mb-4">
            <h3 className="text-lg font-semibold">AI Summary</h3>
            <button
              onClick={() => setShowModal(false)}
              className="text-gray-500 hover:text-gray-700"
            >
              <FiX className="w-5 h-5" />
            </button>
          </div>

          <div className="bg-gray-50 p-3 rounded-lg">
            <p className="text-gray-700 whitespace-pre-line">{summary}</p>
          </div>

          <div className="mt-4 text-xs text-gray-500">
            <p>Generated by AI based on your note content</p>
          </div>
        </div>
      </Modal>
    </div>
  );
}
